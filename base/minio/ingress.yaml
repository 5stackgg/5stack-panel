apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$1
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
    nginx.ingress.kubernetes.io/client-max-body-size: "0"
    nginx.ingress.kubernetes.io/proxy-buffering: "off"
    nginx.ingress.kubernetes.io/proxy-request-buffering: "off"
    nginx.ingress.kubernetes.io/chunked-transfer-encoding: "false"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "300"
    nginx.ingress.kubernetes.io/ignore-invalid-headers: "true"
  name: s3
  namespace: 5stack
spec:
  ingressClassName: nginx
  rules:
    - host: ${S3_ENDPOINT}
      http:
        paths:
          - backend:
              service:
                name: minio
                port:
                  number: 9000
            path: /(.*)
            pathType: Prefix
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$1
  name: s3-console
  namespace: 5stack
spec:
  ingressClassName: nginx
  rules:
    - host: ${S3_CONSOLE_HOST}
      http:
        paths:
          - backend:
              service:
                name: minio
                port:
                  number: 9090
            path: /(.*)
            pathType: Prefix
